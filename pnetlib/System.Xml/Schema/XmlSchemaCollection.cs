/*
 * XmlSchemaCollection.cs - Implementation of "XmlSchemaCollection" 
 *
 * Copyright (C) 2003  Southern Storm Software, Pty Ltd.
 * Copyright (C) 2003  Free Software Foundation.
 * 
 * Authors : Autogenerated using csdoc2stub 
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

namespace System.Xml.Schema
{

using System;
using System.Xml;
using System.Collections;

public class XmlSchemaCollection: IEnumerable, ICollection
{
	[TODO]
	public XmlSchemaCollection()
			{
			}

	[TODO]
	public XmlSchemaCollection(XmlNameTable nametable)
			{
			}

	[TODO]
	public XmlSchema Add(String ns, XmlReader reader)
			{
				return null;
			}

	[TODO]
	public XmlSchema Add(String ns, String uri)
			{
				return null;
			}

	[TODO]
	public XmlSchema Add(XmlSchema schema)
			{
				return null;
			}

	[TODO]
	public void Add(XmlSchemaCollection schema)
			{
			}

	[TODO]
	public bool Contains(String ns)
			{
				return false;
			}

	[TODO]
	public bool Contains(XmlSchema schema)
			{
				return false;
			}

	[TODO]
	public void CopyTo(XmlSchema[] array, int index)
			{
			}

	[TODO]
	public XmlSchemaCollectionEnumerator GetEnumerator()
			{
				return null;
			}

	[TODO]
	public int Count
			{
				get
				{
					return 0;
				}
			}

	[TODO]
	public XmlSchema this[String ns]
			{
				get
				{
					return null;
				}
			}

	[TODO]
	public XmlNameTable NameTable
			{
				get
				{
					return null;
				}
			}

	[TODO]
	bool ICollection.IsSynchronized
			{
				get
				{
					return false;
				}
			}

	[TODO]
	Object ICollection.SyncRoot
			{
				get
				{
					return null;
				}
			}

	void ICollection.CopyTo(Array array, int index)
			{
				this.CopyTo((XmlSchema[])array,index);
			}

	IEnumerator IEnumerable.GetEnumerator()
			{
				return (IEnumerator)(this.GetEnumerator());
			}

}; // class XmlSchemaCollection

}; //namespace System.Xml.Schema
